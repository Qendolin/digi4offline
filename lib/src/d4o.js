"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Digi4Offline=void 0;var _auth=require("./auth.js"),_download=require("./download.js"),_util=require("./util.js"),_wrapper=require("./worker/wrapper.js");function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _classPrivateFieldGet(a,b){var c=_classExtractFieldDescriptor(a,b,"get");return _classApplyDescriptorGet(a,c)}function _classApplyDescriptorGet(a,b){return b.get?b.get.call(a):b.value}function _classPrivateFieldSet(a,b,c){var d=_classExtractFieldDescriptor(a,b,"set");return _classApplyDescriptorSet(a,d,c),c}function _classExtractFieldDescriptor(a,b,c){if(!b.has(a))throw new TypeError("attempted to "+c+" private field on non-instance");return b.get(a)}function _classApplyDescriptorSet(a,b,c){if(b.set)b.set.call(a,c);else{if(!b.writable)throw new TypeError("attempted to set read only private field");b.value=c}}const path=require("path"),fs=require("fs");var _user=new WeakMap;class Digi4Offline{constructor(a){_defineProperty(this,"options",void 0),_user.set(this,{writable:!0,value:void 0}),this.options=a}login(a,b){return _classPrivateFieldSet(this,_user,new _auth.User),_classPrivateFieldGet(this,_user).authenticate(a,b)}async download(a,b,c){const d=await _classPrivateFieldGet(this,_user).aquireBook(a);d.options={...d.options,retryImage:this.options.imageRetries,retryPage:this.options.pageRetries};const e=new _download.RangeDownloader(this.options.dop,d),f=await d.resolveRanges(c,this.options.labels),g=await d.info();console.log("Title: %s\nSBNR: %s\nPublisher: %s\n\tURL: %s\n\tAddress: %s\n\tPhone Number: %s\n\tEmail Adress: %s",g.title,g.sbnr,g.publisher,g.publisherweb,g.publisheradr,g.publishertel,g.publishermail);const h=this._createPdf(b||"./",a,g,f),i=new _wrapper.Writer(h,g);i.on("write",({page:a,pageIndex:b})=>{console.log("Wrote page %s/%s %s",b+1,f.length,a)}),i.on("error",({message:a,args:b=[]})=>{console.error(a,...b)}),await e.download(f,({svg:a,images:b},{pageIndex:c,pageNr:d,downloadNr:e})=>{console.log("Downloaded page %s/%s %s",e,f.length,d),i.write(a,b.map,b.buffer,c,d)}),i.end(),console.log("Waiting for writer to fininsh..."),await i.done,console.log(h),i.worker.unref()}_createPdf(a,b,c,d){let e=path.basename(a),f=path.dirname(a);(a.endsWith("/")||a.endsWith("\\")||!a)&&(e=["ebook",b.replace(/\//,"_"),c.sbnr?`sbnr_${c.sbnr}`:null,`p_${(0,_util.findRanges)(d)}`].filter(a=>!!a).join("-")+".pdf",f=a),fs.mkdirSync(f,{recursive:!0});const g=path.join(path.resolve(f),e);return fs.existsSync(g)&&fs.truncateSync(g),g}}exports.Digi4Offline=Digi4Offline;