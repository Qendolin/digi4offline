"use strict";var _xmldom=require("xmldom");Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetaInfoParser=exports.MetaInfo=void 0;class MetaInfoParser{static converters={title:String,sbnr:String,publisher:String,publisherweb:String,publisheradr:String,publishertel:String,publishermail:String,pageLabels:a=>null==a?null:a.split(","),firstPage:Number};static parse(a){const b="string"==typeof a?new _xmldom.DOMParser().parseFromString(a,"text/html"):a,c=Array.from(b.documentElement.getElementsByTagName("meta")),d=new MetaInfo;for(const b of c){const a=b.getAttribute("name");if(d.hasOwnProperty(a)){const c=b.getAttribute("content");d[a]=MetaInfoParser.converters[a](c)}}return d}}exports.MetaInfoParser=MetaInfoParser;class MetaInfo{title;sbnr;publisher;publisherweb;publisheradr;publishertel;publishermail;pageLabels;firstPage;labelPage(a){if(this.pageLabels){a=(a+"").split("-")[0];const b=this.pageLabels.findIndex(b=>b==a);if(-1!=b)return b+1}else if(this.firstPage){if(a=(a+"").replace(/\/.*/g,""),a.startsWith("U")){const b=parseInt(a.substr(1));if(!isNaN(b))return b}else{const b=parseInt(a)+this.firstPage;if(!isNaN(b))return b-1}}else if("number"==typeof a||a.match(/^\d+$/g))return+a;throw new Error(`page label ${a} cannot be resolved`)}}exports.MetaInfo=MetaInfo;